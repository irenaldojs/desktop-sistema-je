generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL_lOCAL")
}

model Usuario {
  id             Int              @id @default(autoincrement())
  nome           String           @unique
  email          String?
  telefone       String?
  password       String
  entradaProduto EntradaProduto[]
  saidaProduto   SaidaProduto[]
}

model Produto {
  id             Int           @id @default(autoincrement())
  descricao      String?
  codigoOriginal String?
  marca          String?
  precoVenda     Int?
  precoCusto     Int?
  tamanho        String?
  cor            String?
  local          String?
  estoque        Int           @default(0)
  produtoItems   ProdutoItem[]
}

model ProdutoItem {
  id               Int             @id @default(autoincrement())
  produtoId        Int
  quantidade       Int             @default(1)
  saidaProdutoId   Int?
  entradaProdutoId Int?
  entradaProduto   EntradaProduto? @relation(fields: [entradaProdutoId], references: [id])
  saidaProduto     SaidaProduto?   @relation(fields: [saidaProdutoId], references: [id])
  produto          Produto         @relation(fields: [produtoId], references: [id])
}

model EntradaProduto {
  id             Int           @id @default(autoincrement())
  data           DateTime?     @default(now())
  usuarioId      Int
  total          Int
  operacao       String?       @default("COMPRA")
  fornecedorId   Int?
  revendedoresId Int?
  Revendedores   Revendedor?   @relation(fields: [revendedoresId], references: [id])
  Fornecedor     Fornecedor?   @relation(fields: [fornecedorId], references: [id])
  usuario        Usuario       @relation(fields: [usuarioId], references: [id])
  items          ProdutoItem[]
}

model Fornecedor {
  id         Int              @id @default(autoincrement())
  nome       String?
  telefone   String?
  enderecoId Int
  entradas   EntradaProduto[]
  endereco   Endereco         @relation(fields: [enderecoId], references: [id])
}

model Cliente {
  id         Int            @id @default(autoincrement())
  data       DateTime       @default(now())
  telefone   String?
  email      String?
  enderecoId Int
  endereco   Endereco       @relation(fields: [enderecoId], references: [id])
  compras    SaidaProduto[]
}

model Endereco {
  id           Int          @id @default(autoincrement())
  rua          String?
  numero       String?
  bairro       String?
  cidade       String?
  estado       String?
  Clientes     Cliente[]
  Fornecedores Fornecedor[]
  Revendedores Revendedor[]
}

model SaidaProduto {
  id             Int           @id @default(autoincrement())
  data           DateTime      @default(now())
  usuarioId      Int
  total          Int?
  operacao       String        @default("VENDA")
  clienteId      Int?
  revendedoresId Int?
  items          ProdutoItem[]
  Revendedores   Revendedor?   @relation(fields: [revendedoresId], references: [id])
  Cliente        Cliente?      @relation(fields: [clienteId], references: [id])
  usuario        Usuario       @relation(fields: [usuarioId], references: [id])
}

model Revendedor {
  id         Int              @id @default(autoincrement())
  data       DateTime         @default(now())
  telefone   String?
  email      String?
  enderecoId Int
  devolucao  EntradaProduto[]
  endereco   Endereco         @relation(fields: [enderecoId], references: [id])
  reposicao  SaidaProduto[]
}
